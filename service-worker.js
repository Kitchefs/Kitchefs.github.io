<<<<<<< Updated upstream
!function(){"use strict";const e=1603867720098,t="cache"+e,s=["/client/client.246132ea.js","/client/inject_styles.5607aec6.js","/client/index.2c2b515a.js","/client/item.d9231c14.js","/client/saved_items.032fe87e.js","/client/store.08ea11a8.js","/client/[slug].6df788e7.js","/client/index.f8b7925f.js","/client/[slug].1c9fe4f1.js"].concat(["/service-worker-index.html","/favicon.ico","/global.css","/kitchefs_icon.png","/media/anzac-biscuits.jpg","/media/chocolate-caramel-slice.jpg","/media/guacamole.jpg","/media/hot-cross-buns.jpg"]),c=new Set(s);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(s))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const s of e)s!==t&&await caches.delete(s);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const s=new URL(t.request.url);s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&c.has(s.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open("offline"+e).then((async e=>{try{const s=await fetch(t.request);return e.put(t.request,s.clone()),s}catch(s){const c=await e.match(t.request);if(c)return c;throw s}})))))}))}();
=======
!function(){"use strict";const e=1604027027564,t="cache"+e,s=["/client/client.780b1548.js","/client/inject_styles.5607aec6.js","/client/index.f98700af.js","/client/item.b2dd9c0f.js","/client/saved_items.58df2c79.js","/client/store.73c3cfbd.js","/client/[slug].ba69c21a.js","/client/index.fc15c24e.js","/client/[slug].70aa6606.js"].concat(["/service-worker-index.html","/.DS_Store","/favicon.ico","/global.css","/kitchefs_icon.png","/manifest.json","/media/anzac-biscuits.jpg","/media/chocolate-caramel-slice.jpg","/media/guacamole.jpg","/media/hot-cross-buns.jpg"]),c=new Set(s);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(s))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const s of e)s!==t&&await caches.delete(s);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const s=new URL(t.request.url);s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&c.has(s.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open("offline"+e).then((async e=>{try{const s=await fetch(t.request);return e.put(t.request,s.clone()),s}catch(s){const c=await e.match(t.request);if(c)return c;throw s}})))))}))}();
>>>>>>> Stashed changes
